{"ast":null,"code":"var _jsxFileName = \"/Users/obzva/Desktop/find-clean-water/src/components/row/row-slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./row-slider.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RowSlider = props => {\n  _s();\n\n  //waterBrands 불러오기\n  const waterBrands = props.waterBrands;\n  let row1 = waterBrands.slice(0, waterBrands.length / 2);\n  let row2 = waterBrands.slice(waterBrands.length / 2);\n  const rowLength1 = row1.length;\n  const rowLength2 = row2.length; //각각의 row 앞 뒤에 슬라이드 추가해서 무한 슬라이드처럼 보이게끔 하기\n\n  const rowHead1 = row1.slice(0, 2);\n  const rowHead2 = row2.slice(0, 3);\n  const rowTail1 = row1.slice(-2);\n  const rowTail2 = row2.slice(-2);\n  row1 = rowTail1.concat(row1, rowHead1);\n  row2 = rowTail2.concat(row2, rowHead2); //carousel에 들어갈 슬라이드와 슬라이드 간 간격 계산\n\n  const [windowWidth, setWindowWidth] = useState(undefined);\n\n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener;\n  }, [currentWidth]);\n  console.log(windowWidth); //carousel의 슬라이딩 기능 구현\n\n  const [currentIndex1, setCurrentIndex1] = useState(0);\n  const [currentIndex2, setCurrentIndex2] = useState(0);\n  const transitionTime1 = 450;\n  const transitionTime2 = 500;\n  const transitionStyle1 = `transform ${transitionTime1}ms ease 0s`;\n  const transitionStyle2 = `transform ${transitionTime2}ms ease 0s`;\n  const [slideTransition1, setSlideTransition1] = useState(transitionStyle1);\n  const [slideTransition2, setSlideTransition2] = useState(transitionStyle2);\n\n  const replaceSlide1 = index1 => {\n    setTimeout(() => {\n      setSlideTransition1(\"\");\n      setCurrentIndex1(index1);\n    }, Math.max(transitionTime1, transitionTime2));\n  };\n\n  const replaceSlide2 = index2 => {\n    setTimeout(() => {\n      setSlideTransition2(\"\");\n      setCurrentIndex2(index2);\n    }, Math.max(transitionTime1, transitionTime2));\n  };\n\n  const handleSwipe = direction => {\n    let index1 = currentIndex1 + direction;\n    let index2 = currentIndex2 + direction;\n    setCurrentIndex1(index1);\n    setCurrentIndex2(index2); //row1\n    //오른쪽으로 갈 때\n\n    if (currentIndex1 + direction === rowLength1) {\n      index1 = 0;\n      replaceSlide1(index1);\n    } //왼쪽으로 갈 때\n    else if (currentIndex1 + direction === -1) {\n      index1 = rowLength1 - 1;\n      replaceSlide1(index1);\n    } //row2\n    //오른쪽으로 갈 때\n\n\n    if (currentIndex2 + direction === rowLength2) {\n      index2 = 0;\n      replaceSlide2(index2);\n    } //왼쪽으로 갈 때\n    else if (currentIndex2 + direction === -1) {\n      index2 = rowLength2 - 1;\n      replaceSlide2(index2);\n    }\n\n    setSlideTransition1(transitionStyle1);\n    setSlideTransition2(transitionStyle2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rowSliderSliderTrack1\",\n      style: {\n        transform: `translateX(${152 - (128 + 16) * 2 - 128 / 2 - (128 + 16) * currentIndex1}px)`,\n        transition: slideTransition1,\n        width: `${128 * row1.length + 16 * (row1.length - 1)}px`\n      },\n      children: row1.map((waterBrand, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowSliderSlide1\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${waterBrand.id}`,\n          state: {\n            waterBrand: waterBrand\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${waterBrand.image_url}`,\n            alt: `${waterBrand.name}`,\n            style: {\n              width: \"110px\",\n              height: \"110px\",\n              margin: \"9px 9px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rowSliderSliderTrack2\",\n      style: {\n        transform: `translateX(${152 - (128 + 16) * (2 + 1) + 16 / 2 - (128 + 16) * currentIndex2}px)`,\n        transition: slideTransition2,\n        width: `${128 * row2.length + 16 * (row2.length - 1)}px`\n      },\n      children: row2.map((waterBrand, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowSliderSlide2\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${waterBrand.id}`,\n          state: {\n            waterBrand: waterBrand\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${waterBrand.image_url}`,\n            alt: `${waterBrand.name}`,\n            style: {\n              width: \"110px\",\n              height: \"110px\",\n              margin: \"9px 9px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rowSliderButtonLeft\",\n      onClick: () => handleSwipe(-1),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"/Users/obzva/Desktop/find-clean-water/src/img/btn-left.png\"),\n        alt: \"btn-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rowSliderButtonRight\",\n      onClick: () => handleSwipe(1),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"/Users/obzva/Desktop/find-clean-water/src/img/btn-right.png\"),\n        alt: \"btn-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RowSlider, \"OG01FpWw6d6raE72XOnJhQR7n0k=\");\n\n_c = RowSlider;\nexport default RowSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowSlider\");","map":{"version":3,"names":["React","useState","useEffect","Link","RowSlider","props","waterBrands","row1","slice","length","row2","rowLength1","rowLength2","rowHead1","rowHead2","rowTail1","rowTail2","concat","windowWidth","setWindowWidth","undefined","handleResize","window","innerWidth","addEventListener","removeEventListener","currentWidth","console","log","currentIndex1","setCurrentIndex1","currentIndex2","setCurrentIndex2","transitionTime1","transitionTime2","transitionStyle1","transitionStyle2","slideTransition1","setSlideTransition1","slideTransition2","setSlideTransition2","replaceSlide1","index1","setTimeout","Math","max","replaceSlide2","index2","handleSwipe","direction","transform","transition","width","map","waterBrand","index","id","image_url","name","height","margin","require"],"sources":["/Users/obzva/Desktop/find-clean-water/src/components/row/row-slider.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./row-slider.css\";\n\nconst RowSlider = (props) => {\n  //waterBrands 불러오기\n  const waterBrands = props.waterBrands;\n\n  let row1 = waterBrands.slice(0, waterBrands.length / 2);\n  let row2 = waterBrands.slice(waterBrands.length / 2);\n\n  const rowLength1 = row1.length;\n  const rowLength2 = row2.length;\n\n  //각각의 row 앞 뒤에 슬라이드 추가해서 무한 슬라이드처럼 보이게끔 하기\n  const rowHead1 = row1.slice(0, 2);\n  const rowHead2 = row2.slice(0, 3);\n  const rowTail1 = row1.slice(-2);\n  const rowTail2 = row2.slice(-2);\n\n  row1 = rowTail1.concat(row1, rowHead1);\n  row2 = rowTail2.concat(row2, rowHead2);\n\n  //carousel에 들어갈 슬라이드와 슬라이드 간 간격 계산\n  const [windowWidth, setWindowWidth] = useState(undefined);\n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n\n  };\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener\n  }, [currentWidth]);\n  console.log(windowWidth);\n\n  //carousel의 슬라이딩 기능 구현\n  const [currentIndex1, setCurrentIndex1] = useState(0);\n  const [currentIndex2, setCurrentIndex2] = useState(0);\n\n  const transitionTime1 = 450;\n  const transitionTime2 = 500;\n  const transitionStyle1 = `transform ${transitionTime1}ms ease 0s`;\n  const transitionStyle2 = `transform ${transitionTime2}ms ease 0s`;\n  const [slideTransition1, setSlideTransition1] = useState(transitionStyle1);\n  const [slideTransition2, setSlideTransition2] = useState(transitionStyle2);\n\n  const replaceSlide1 = (index1) => {\n    setTimeout(() => {\n      setSlideTransition1(\"\");\n      setCurrentIndex1(index1);\n    }, Math.max(transitionTime1, transitionTime2));\n  };\n\n  const replaceSlide2 = (index2) => {\n    setTimeout(() => {\n      setSlideTransition2(\"\");\n      setCurrentIndex2(index2);\n    }, Math.max(transitionTime1, transitionTime2));\n  };\n\n  const handleSwipe = (direction) => {\n    let index1 = currentIndex1 + direction;\n    let index2 = currentIndex2 + direction;\n    setCurrentIndex1(index1);\n    setCurrentIndex2(index2);\n    //row1\n    //오른쪽으로 갈 때\n    if (currentIndex1 + direction === rowLength1) {\n      index1 = 0;\n      replaceSlide1(index1);\n    }\n    //왼쪽으로 갈 때\n    else if (currentIndex1 + direction === -1) {\n      index1 = rowLength1 - 1;\n      replaceSlide1(index1);\n    }\n    //row2\n    //오른쪽으로 갈 때\n    if (currentIndex2 + direction === rowLength2) {\n      index2 = 0;\n      replaceSlide2(index2);\n    }\n    //왼쪽으로 갈 때\n    else if (currentIndex2 + direction === -1) {\n      index2 = rowLength2 - 1;\n      replaceSlide2(index2);\n    }\n    setSlideTransition1(transitionStyle1);\n    setSlideTransition2(transitionStyle2);\n  };\n\n  return (\n    <>\n      <div\n        className=\"rowSliderSliderTrack1\"\n        style={{\n          transform: `translateX(${\n            152 - (128 + 16) * 2 - 128 / 2 - (128 + 16) * currentIndex1\n          }px)`,\n          transition: slideTransition1,\n          width: `${128 * row1.length + 16 * (row1.length - 1)}px`,\n        }}\n      >\n        {row1.map((waterBrand, index) => (\n          <div className=\"rowSliderSlide1\" key={index}>\n            <Link to={`/${waterBrand.id}`} state={{ waterBrand: waterBrand }}>\n              <img\n                src={`${waterBrand.image_url}`}\n                alt={`${waterBrand.name}`}\n                style={{\n                  width: \"110px\",\n                  height: \"110px\",\n                  margin: \"9px 9px\",\n                }}\n              />\n            </Link>\n          </div>\n        ))}\n      </div>\n      <div\n        className=\"rowSliderSliderTrack2\"\n        style={{\n          transform: `translateX(${\n            152 - (128 + 16) * (2 + 1) + 16 / 2 - (128 + 16) * currentIndex2\n          }px)`,\n          transition: slideTransition2,\n          width: `${128 * row2.length + 16 * (row2.length - 1)}px`,\n        }}\n      >\n        {row2.map((waterBrand, index) => (\n          <div className=\"rowSliderSlide2\" key={index}>\n            <Link to={`/${waterBrand.id}`} state={{ waterBrand: waterBrand }}>\n              <img\n                src={`${waterBrand.image_url}`}\n                alt={`${waterBrand.name}`}\n                style={{\n                  width: \"110px\",\n                  height: \"110px\",\n                  margin: \"9px 9px\",\n                }}\n              />\n            </Link>\n          </div>\n        ))}\n      </div>\n      <button className=\"rowSliderButtonLeft\" onClick={() => handleSwipe(-1)}>\n        <img\n          src={require(\"/Users/obzva/Desktop/find-clean-water/src/img/btn-left.png\")}\n          alt=\"btn-left\"\n        />\n      </button>\n      <button className=\"rowSliderButtonRight\" onClick={() => handleSwipe(1)}>\n        <img\n          src={require(\"/Users/obzva/Desktop/find-clean-water/src/img/btn-right.png\")}\n          alt=\"btn-right\"\n        />\n      </button>\n    </>\n  );\n};\n\nexport default RowSlider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}