{"ast":null,"code":"var _jsxFileName = \"/Users/obzva/Desktop/find-clean-water/src/components/table-for-invalid.js\";\nimport { Table } from \"antd\";\nimport { getWaterBrands, getWaterBrandVersions, getWaterBrandVersionSourceMappings, getWaterSources } from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TableForInvalid() {\n  const columns = [{\n    title: \"브랜드\",\n    dataIndex: \"brand\",\n    key: \"brand\"\n  }, {\n    title: \"수질적합\",\n    dataIndex: \"validity\",\n    key: \"validity\"\n  }, {\n    title: \"부적합 판정 횟수\",\n    dataIndex: \"invalid_count\",\n    key: \"invalid_count\"\n  }, {\n    title: \"출시일\",\n    dataIndex: \"open_date\",\n    key: \"open_date\"\n  }];\n  const waterBrandsDataSource = getWaterBrands().map(x => {\n    return {\n      key: x.id,\n      brand: x.name,\n      validity: x.recent_test_result,\n      invalid_count: x.total_invalid_count,\n      open_date: x.open_date\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC218\\uC9C8 \\uBD80\\uC801\\uD569 \\uD310\\uC815 \\uD69F\\uC218\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: waterBrandsDataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = TableForInvalid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableForInvalid\");","map":{"version":3,"names":["Table","getWaterBrands","getWaterBrandVersions","getWaterBrandVersionSourceMappings","getWaterSources","TableForInvalid","columns","title","dataIndex","key","waterBrandsDataSource","map","x","id","brand","name","validity","recent_test_result","invalid_count","total_invalid_count","open_date"],"sources":["/Users/obzva/Desktop/find-clean-water/src/components/table-for-invalid.js"],"sourcesContent":["import { Table } from \"antd\";\nimport {\n  getWaterBrands,\n  getWaterBrandVersions,\n  getWaterBrandVersionSourceMappings,\n  getWaterSources,\n} from \"../data\";\n\nexport default function TableForInvalid() {\n  const columns = [\n    {\n      title: \"브랜드\",\n      dataIndex: \"brand\",\n      key: \"brand\",\n    },\n    {\n      title: \"수질적합\",\n      dataIndex: \"validity\",\n      key: \"validity\",\n    },\n    {\n      title: \"부적합 판정 횟수\",\n      dataIndex: \"invalid_count\",\n      key: \"invalid_count\",\n    },\n    {\n      title: \"출시일\",\n      dataIndex: \"open_date\",\n      key: \"open_date\",\n    },\n  ];\n\n  const waterBrandsDataSource = getWaterBrands().map((x) => {\n    return {\n      key: x.id,\n      brand: x.name,\n      validity: x.recent_test_result,\n      invalid_count: x.total_invalid_count,\n      open_date: x.open_date,\n    };\n  });\n\n  return (\n    <>\n        <h2>수질 부적합 판정 횟수</h2>\n      <Table dataSource={waterBrandsDataSource} columns={columns} />\n    </>\n  );\n}\n"],"mappings":";AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,SACEC,cADF,EAEEC,qBAFF,EAGEC,kCAHF,EAIEC,eAJF,QAKO,SALP;;;AAOA,eAAe,SAASC,eAAT,GAA2B;EACxC,MAAMC,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,KADT;IAEEC,SAAS,EAAE,OAFb;IAGEC,GAAG,EAAE;EAHP,CADc,EAMd;IACEF,KAAK,EAAE,MADT;IAEEC,SAAS,EAAE,UAFb;IAGEC,GAAG,EAAE;EAHP,CANc,EAWd;IACEF,KAAK,EAAE,WADT;IAEEC,SAAS,EAAE,eAFb;IAGEC,GAAG,EAAE;EAHP,CAXc,EAgBd;IACEF,KAAK,EAAE,KADT;IAEEC,SAAS,EAAE,WAFb;IAGEC,GAAG,EAAE;EAHP,CAhBc,CAAhB;EAuBA,MAAMC,qBAAqB,GAAGT,cAAc,GAAGU,GAAjB,CAAsBC,CAAD,IAAO;IACxD,OAAO;MACLH,GAAG,EAAEG,CAAC,CAACC,EADF;MAELC,KAAK,EAAEF,CAAC,CAACG,IAFJ;MAGLC,QAAQ,EAAEJ,CAAC,CAACK,kBAHP;MAILC,aAAa,EAAEN,CAAC,CAACO,mBAJZ;MAKLC,SAAS,EAAER,CAAC,CAACQ;IALR,CAAP;EAOD,CAR6B,CAA9B;EAUA,oBACE;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEE,QAAC,KAAD;MAAO,UAAU,EAAEV,qBAAnB;MAA0C,OAAO,EAAEJ;IAAnD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;KAxCuBD,e"},"metadata":{},"sourceType":"module"}