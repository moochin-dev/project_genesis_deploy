{"ast":null,"code":"var _jsxFileName = \"/Users/obzva/Desktop/find-clean-water/src/components/row/row-slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./row-slider.css\";\nimport { useWindowWidth } from \"../../custom-hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RowSlider = props => {\n  _s();\n\n  //waterBrands 불러오기\n  const waterBrands = props.waterBrands;\n  let row1 = waterBrands.slice(0, waterBrands.length / 2);\n  let row2 = waterBrands.slice(waterBrands.length / 2); //각각의 row 앞 뒤에 슬라이드 추가해서 무한 슬라이드처럼 보이게끔 하기\n\n  const rowHead1 = row1.slice(0, 2);\n  const rowHead2 = row2.slice(0, 3);\n  const rowTail1 = row1.slice(-2);\n  const rowTail2 = row2.slice(-2);\n  let newRow1;\n  let newRow2;\n  newRow1 = rowTail1.concat(row1, rowHead1);\n  newRow2 = rowTail2.concat(row2, rowHead2);\n  const [rowLength1, setRowLength1] = useState(0);\n  const [rowLength2, setRowLength2] = useState(0);\n  useEffect(() => {\n    setRowLength1(newRow1.length);\n    setRowLength2(newRow2.length);\n  }, [newRow1, newRow2]); //dimension 만지기\n\n  const windowWidth = useWindowWidth();\n  const slideWidth = 152 * windowWidth / 360;\n  const slideGap = 24 * windowWidth / 360;\n  const [slideTrackWidth1, setSlideTrackWidth1] = useState(slideWidth * rowLength1 + slideGap * (rowLength1 - 1));\n  useEffect;\n  console.log(`windowWidth: ${windowWidth}`);\n  console.log(`slideWidth: ${slideWidth}`);\n  console.log(`slideGap: ${slideGap}`);\n  console.log(`slideTrackWidth1: ${slideTrackWidth1}`);\n  console.log(rowLength1); //carousel의 슬라이딩 기능 구현\n\n  const [currentIndex1, setCurrentIndex1] = useState(0);\n  const [currentIndex2, setCurrentIndex2] = useState(0);\n  const transitionTime1 = 450;\n  const transitionTime2 = 500;\n  const transitionStyle1 = `transform ${transitionTime1}ms ease 0s`;\n  const transitionStyle2 = `transform ${transitionTime2}ms ease 0s`;\n  const [slideTransition1, setSlideTransition1] = useState(transitionStyle1);\n  const [slideTransition2, setSlideTransition2] = useState(transitionStyle2);\n\n  const replaceSlide1 = index1 => {\n    setTimeout(() => {\n      setSlideTransition1(\"\");\n      setCurrentIndex1(index1);\n    }, Math.max(transitionTime1, transitionTime2));\n  };\n\n  const replaceSlide2 = index2 => {\n    setTimeout(() => {\n      setSlideTransition2(\"\");\n      setCurrentIndex2(index2);\n    }, Math.max(transitionTime1, transitionTime2));\n  };\n\n  const handleSwipe = direction => {\n    let index1 = currentIndex1 + direction;\n    let index2 = currentIndex2 + direction;\n    setCurrentIndex1(index1);\n    setCurrentIndex2(index2); //row1\n    //오른쪽으로 갈 때\n\n    if (currentIndex1 + direction === rowLength1) {\n      index1 = 0;\n      replaceSlide1(index1);\n    } //왼쪽으로 갈 때\n    else if (currentIndex1 + direction === -1) {\n      index1 = rowLength1 - 1;\n      replaceSlide1(index1);\n    } //row2\n    //오른쪽으로 갈 때\n\n\n    if (currentIndex2 + direction === rowLength2) {\n      index2 = 0;\n      replaceSlide2(index2);\n    } //왼쪽으로 갈 때\n    else if (currentIndex2 + direction === -1) {\n      index2 = rowLength2 - 1;\n      replaceSlide2(index2);\n    }\n\n    setSlideTransition1(transitionStyle1);\n    setSlideTransition2(transitionStyle2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rowSliderSliderTrack1\",\n      style: {\n        transition: slideTransition1,\n        width: `${slideWidth * row1.length + slideGap * (row1.length - 1)}px`,\n        transform: `translateX(${windowWidth / 2 - (slideWidth + slideGap) * 2 - slideWidth / 2 - (slideWidth + slideGap) * currentIndex1}px)`\n      },\n      children: row1.map((waterBrand, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowSliderSlide1\",\n        style: {\n          width: `${slideWidth}px`\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${waterBrand.id}`,\n          state: {\n            waterBrand: waterBrand\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${waterBrand.image_url}`,\n            alt: `${waterBrand.name}`,\n            style: {\n              width: `${133 * windowWidth / 360}px`,\n              height: \"133px\",\n              margin: \"9.5px\",\n              boxSizing: \"content-box\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rowSliderSliderTrack2\",\n      style: {\n        transform: `translateX(${152 - (128 + 16) * (2 + 1) + 16 / 2 - (128 + 16) * currentIndex2}px)`,\n        transition: slideTransition2,\n        width: `${128 * row2.length + 16 * (row2.length - 1)}px`\n      },\n      children: row2.map((waterBrand, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowSliderSlide2\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${waterBrand.id}`,\n          state: {\n            waterBrand: waterBrand\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${waterBrand.image_url}`,\n            alt: `${waterBrand.name}`,\n            style: {\n              width: \"110px\",\n              height: \"110px\",\n              margin: \"9px 9px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rowSliderButtonLeft\",\n      onClick: () => handleSwipe(-1),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"/Users/obzva/Desktop/find-clean-water/src/img/btn-left.png\"),\n        alt: \"btn-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rowSliderButtonRight\",\n      onClick: () => handleSwipe(1),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"/Users/obzva/Desktop/find-clean-water/src/img/btn-right.png\"),\n        alt: \"btn-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RowSlider, \"i+Jlhfk7GYhsV0FoA2VtF/S0zkc=\", false, function () {\n  return [useWindowWidth];\n});\n\n_c = RowSlider;\nexport default RowSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowSlider\");","map":{"version":3,"names":["React","useState","useEffect","Link","useWindowWidth","RowSlider","props","waterBrands","row1","slice","length","row2","rowHead1","rowHead2","rowTail1","rowTail2","newRow1","newRow2","concat","rowLength1","setRowLength1","rowLength2","setRowLength2","windowWidth","slideWidth","slideGap","slideTrackWidth1","setSlideTrackWidth1","console","log","currentIndex1","setCurrentIndex1","currentIndex2","setCurrentIndex2","transitionTime1","transitionTime2","transitionStyle1","transitionStyle2","slideTransition1","setSlideTransition1","slideTransition2","setSlideTransition2","replaceSlide1","index1","setTimeout","Math","max","replaceSlide2","index2","handleSwipe","direction","transition","width","transform","map","waterBrand","index","id","image_url","name","height","margin","boxSizing","require"],"sources":["/Users/obzva/Desktop/find-clean-water/src/components/row/row-slider.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./row-slider.css\";\nimport { useWindowWidth } from \"../../custom-hooks\";\n\nconst RowSlider = (props) => {\n  //waterBrands 불러오기\n  const waterBrands = props.waterBrands;\n\n  let row1 = waterBrands.slice(0, waterBrands.length / 2);\n  let row2 = waterBrands.slice(waterBrands.length / 2);\n\n  //각각의 row 앞 뒤에 슬라이드 추가해서 무한 슬라이드처럼 보이게끔 하기\n  const rowHead1 = row1.slice(0, 2);\n  const rowHead2 = row2.slice(0, 3);\n  const rowTail1 = row1.slice(-2);\n  const rowTail2 = row2.slice(-2);\n\n  let newRow1;\n  let newRow2;\n  newRow1 = rowTail1.concat(row1, rowHead1);\n  newRow2 = rowTail2.concat(row2, rowHead2);\n  const [rowLength1, setRowLength1] = useState(0);\n  const [rowLength2, setRowLength2] = useState(0);\n  useEffect(() => {\n    setRowLength1(newRow1.length);\n    setRowLength2(newRow2.length);\n  }, [newRow1, newRow2])\n\n  //dimension 만지기\n  const windowWidth = useWindowWidth();\n  const slideWidth = (152 * windowWidth) / 360;\n  const slideGap = (24 * windowWidth) / 360;\n  const [slideTrackWidth1, setSlideTrackWidth1] = useState(\n    slideWidth * rowLength1 + slideGap * (rowLength1 - 1)\n  );\n  useEffect\n  console.log(`windowWidth: ${windowWidth}`);\n  console.log(`slideWidth: ${slideWidth}`);\n  console.log(`slideGap: ${slideGap}`);\n  console.log(`slideTrackWidth1: ${slideTrackWidth1}`);\n  console.log(rowLength1);\n\n  //carousel의 슬라이딩 기능 구현\n  const [currentIndex1, setCurrentIndex1] = useState(0);\n  const [currentIndex2, setCurrentIndex2] = useState(0);\n\n  const transitionTime1 = 450;\n  const transitionTime2 = 500;\n  const transitionStyle1 = `transform ${transitionTime1}ms ease 0s`;\n  const transitionStyle2 = `transform ${transitionTime2}ms ease 0s`;\n  const [slideTransition1, setSlideTransition1] = useState(transitionStyle1);\n  const [slideTransition2, setSlideTransition2] = useState(transitionStyle2);\n\n  const replaceSlide1 = (index1) => {\n    setTimeout(() => {\n      setSlideTransition1(\"\");\n      setCurrentIndex1(index1);\n    }, Math.max(transitionTime1, transitionTime2));\n  };\n\n  const replaceSlide2 = (index2) => {\n    setTimeout(() => {\n      setSlideTransition2(\"\");\n      setCurrentIndex2(index2);\n    }, Math.max(transitionTime1, transitionTime2));\n  };\n\n  const handleSwipe = (direction) => {\n    let index1 = currentIndex1 + direction;\n    let index2 = currentIndex2 + direction;\n    setCurrentIndex1(index1);\n    setCurrentIndex2(index2);\n    //row1\n    //오른쪽으로 갈 때\n    if (currentIndex1 + direction === rowLength1) {\n      index1 = 0;\n      replaceSlide1(index1);\n    }\n    //왼쪽으로 갈 때\n    else if (currentIndex1 + direction === -1) {\n      index1 = rowLength1 - 1;\n      replaceSlide1(index1);\n    }\n    //row2\n    //오른쪽으로 갈 때\n    if (currentIndex2 + direction === rowLength2) {\n      index2 = 0;\n      replaceSlide2(index2);\n    }\n    //왼쪽으로 갈 때\n    else if (currentIndex2 + direction === -1) {\n      index2 = rowLength2 - 1;\n      replaceSlide2(index2);\n    }\n    setSlideTransition1(transitionStyle1);\n    setSlideTransition2(transitionStyle2);\n  };\n\n  return (\n    <>\n      <div\n        className=\"rowSliderSliderTrack1\"\n        style={{\n          transition: slideTransition1,\n          width: `${slideWidth * row1.length + slideGap * (row1.length - 1)}px`,\n          transform: `translateX(${\n            windowWidth / 2 -\n            (slideWidth + slideGap) * 2 -\n            slideWidth / 2 -\n            (slideWidth + slideGap) * currentIndex1\n          }px)`,\n        }}\n      >\n        {row1.map((waterBrand, index) => (\n          <div\n            className=\"rowSliderSlide1\"\n            key={index}\n            style={{ width: `${slideWidth}px` }}\n          >\n            <Link to={`/${waterBrand.id}`} state={{ waterBrand: waterBrand }}>\n              <img\n                src={`${waterBrand.image_url}`}\n                alt={`${waterBrand.name}`}\n                style={{\n                  width: `${(133 * windowWidth) / 360}px`,\n                  height: \"133px\",\n                  margin: \"9.5px\",\n                  boxSizing: \"content-box\",\n                }}\n              />\n            </Link>\n          </div>\n        ))}\n      </div>\n      <div\n        className=\"rowSliderSliderTrack2\"\n        style={{\n          transform: `translateX(${\n            152 - (128 + 16) * (2 + 1) + 16 / 2 - (128 + 16) * currentIndex2\n          }px)`,\n          transition: slideTransition2,\n          width: `${128 * row2.length + 16 * (row2.length - 1)}px`,\n        }}\n      >\n        {row2.map((waterBrand, index) => (\n          <div className=\"rowSliderSlide2\" key={index}>\n            <Link to={`/${waterBrand.id}`} state={{ waterBrand: waterBrand }}>\n              <img\n                src={`${waterBrand.image_url}`}\n                alt={`${waterBrand.name}`}\n                style={{\n                  width: \"110px\",\n                  height: \"110px\",\n                  margin: \"9px 9px\",\n                }}\n              />\n            </Link>\n          </div>\n        ))}\n      </div>\n      <button className=\"rowSliderButtonLeft\" onClick={() => handleSwipe(-1)}>\n        <img\n          src={require(\"/Users/obzva/Desktop/find-clean-water/src/img/btn-left.png\")}\n          alt=\"btn-left\"\n        />\n      </button>\n      <button className=\"rowSliderButtonRight\" onClick={() => handleSwipe(1)}>\n        <img\n          src={require(\"/Users/obzva/Desktop/find-clean-water/src/img/btn-right.png\")}\n          alt=\"btn-right\"\n        />\n      </button>\n    </>\n  );\n};\n\nexport default RowSlider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}