{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nimport cloneDeep from './utils/cloneDeep';\nexport var FormStore = /*#__PURE__*/_createClass(function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      _init: true,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        destroyForm: _this.destroyForm,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue,\n        registerWatch: _this.registerWatch\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n\n  this.prevWithoutPreserves = null;\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      var _this$prevWithoutPres;\n\n      var nextStore = setValues({}, initialValues, _this.store); // We will take consider prev form unmount fields.\n      // When the field is not `preserve`, we need fill this with initialValues instead of store.\n      // eslint-disable-next-line array-callback-return\n\n      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 ? void 0 : _this$prevWithoutPres.map(function (_ref) {\n        var namePath = _ref.key;\n        nextStore = setValue(nextStore, namePath, getValue(initialValues, namePath));\n      });\n      _this.prevWithoutPreserves = null;\n\n      _this.updateStore(nextStore);\n    }\n  };\n\n  this.destroyForm = function () {\n    var prevWithoutPreserves = new NameMap();\n\n    _this.getFieldEntities(true).forEach(function (entity) {\n      if (!entity.isPreserve()) {\n        prevWithoutPreserves.set(entity.getNamePath(), true);\n      }\n    });\n\n    _this.prevWithoutPreserves = prevWithoutPreserves;\n  };\n\n  this.getInitialValue = function (namePath) {\n    var initValue = getValue(_this.initialValues, namePath); // Not cloneDeep when without `namePath`\n\n    return namePath.length ? cloneDeep(initValue) : initValue;\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n\n  this.watchList = [];\n\n  this.registerWatch = function (callback) {\n    _this.watchList.push(callback);\n\n    return function () {\n      _this.watchList = _this.watchList.filter(function (fn) {\n        return fn !== callback;\n      });\n    };\n  };\n\n  this.notifyWatch = function () {\n    var namePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; // No need to cost perf when nothing need to watch\n\n    if (_this.watchList.length) {\n      var values = _this.getFieldsValue();\n\n      _this.watchList.forEach(function (callback) {\n        callback(values, namePath);\n      });\n    }\n  };\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n\n  this.updateStore = function (nextStore) {\n    _this.store = nextStore;\n  };\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref2) {\n      var value = _ref2.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Create cache\n\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.updateStore(setValue(_this.store, namePath, _toConsumableArray(records)[0].value));\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.updateStore(setValues({}, _this.initialValues));\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      _this.notifyWatch();\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.updateStore(setValue(_this.store, namePath, initialValue));\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    var namePathList = [];\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name);\n      namePathList.push(namePath); // Value\n\n      if ('value' in data) {\n        _this.updateStore(setValue(_this.store, namePath, data.value));\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.updateStore(setValue(_this.store, namePath, initialValue));\n      }\n    }\n  };\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity);\n\n    var namePath = entity.getNamePath();\n\n    _this.notifyWatch([namePath]); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      var mergedPreserve = preserve !== undefined ? preserve : _this.preserve;\n\n      if (mergedPreserve === false && (!isListField || subNamePath.length > 1)) {\n        var defaultValue = isListField ? undefined : _this.getInitialValue(namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          var _prevStore = _this.store;\n\n          _this.updateStore(setValue(_prevStore, namePath, defaultValue, true)); // Notify that field is unmount\n\n\n          _this.notifyObservers(_prevStore, [namePath], {\n            type: 'remove'\n          }); // Dependencies update\n\n\n          _this.triggerDependenciesUpdate(_prevStore, namePath);\n        }\n      }\n\n      _this.notifyWatch([namePath]);\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref3) {\n        var onStoreChange = _ref3.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.triggerDependenciesUpdate = function (prevStore, namePath) {\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    });\n\n    return childrenFields;\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n\n    _this.updateStore(setValue(_this.store, namePath, value));\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    });\n\n    _this.notifyWatch([namePath]); // Dependencies update\n\n\n    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      var nextStore = setValues(_this.store, store);\n\n      _this.updateStore(nextStore);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n\n    _this.notifyWatch();\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref4) {\n          var name = _ref4.name,\n              errors = _ref4.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref5) {\n        var fieldName = _ref5.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n\n        if ( // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          ruleErrors.forEach(function (_ref6) {\n            var warningOnly = _ref6.rule.warningOnly,\n                errors = _ref6.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref7) {\n        var name = _ref7.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n});\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;","map":{"version":3,"names":["_slicedToArray","_objectSpread","_objectWithoutProperties","_toConsumableArray","_createClass","_classCallCheck","_excluded","React","warning","HOOK_MARK","allPromiseFinish","NameMap","defaultValidateMessages","cloneByNamePathList","containsNamePath","getNamePath","getValue","matchNamePath","setValue","setValues","cloneDeep","FormStore","forceRootUpdate","_this","formHooked","subscribable","store","fieldEntities","initialValues","callbacks","validateMessages","preserve","lastValidatePromise","getForm","getFieldValue","getFieldsValue","getFieldError","getFieldWarning","getFieldsError","isFieldsTouched","isFieldTouched","isFieldValidating","isFieldsValidating","resetFields","setFields","setFieldsValue","validateFields","submit","_init","getInternalHooks","key","dispatch","initEntityValue","registerField","useSubscribe","setInitialValues","destroyForm","setCallbacks","setValidateMessages","getFields","setPreserve","getInitialValue","registerWatch","prevWithoutPreserves","init","_this$prevWithoutPres","nextStore","map","_ref","namePath","updateStore","getFieldEntities","forEach","entity","isPreserve","set","initValue","length","watchList","callback","push","filter","fn","notifyWatch","arguments","undefined","values","timeoutId","warningUnhooked","process","env","NODE_ENV","window","setTimeout","pure","field","getFieldsMap","cache","getFieldEntitiesForNamePathList","nameList","name","get","INVALIDATE_NAME_PATH","filterFunc","Array","isArray","filteredNameList","_entity$isListField","isListField","call","meta","getMeta","index","errors","getErrors","warnings","getWarnings","fieldError","_len","args","_key","arg0","arg1","namePathList","isAllFieldsTouched","every","some","shortNamePath","fieldNamePath","nameUnit","i","update","list","concat","isNamePathListTouched","entities","namePathListEntities","_ref2","value","testField","resetWithFieldInitialValue","info","initialValue","props","records","Set","add","resetWithFields","formInitialValue","join","size","originValue","skipExist","requiredFieldEntities","_requiredFieldEntitie","apply","r","prevStore","notifyObservers","type","fields","fieldData","data","Object","defineProperty","prevValue","source","subNamePath","item","mergedPreserve","defaultValue","_prevStore","triggerDependenciesUpdate","action","updateValue","_namePath","triggerName","mergedInfo","_ref3","onStoreChange","childrenFields","getDependencyChildrenFields","relatedFields","onValuesChange","changedValues","triggerOnFieldsChange","rootNamePath","children","dependencies2fields","dependencies","dependency","dependencyNamePath","fillChildren","has","isFieldDirty","filedErrors","onFieldsChange","_ref4","changedFields","_ref5","fieldName","options","provideNameList","promiseList","recursive","rules","promise","validateRules","then","catch","ruleErrors","mergedErrors","mergedWarnings","_ref6","warningOnly","rule","Promise","reject","summaryPromise","results","resultNamePathList","_ref7","returnPromise","resolve","errorList","result","errorFields","outOfDate","e","onFinish","err","console","error","onFinishFailed","useForm","form","formRef","useRef","_React$useState","useState","_React$useState2","forceUpdate","current","forceReRender","formStore"],"sources":["/Users/obzva/Desktop/find-clean-water/node_modules/rc-field-form/es/useForm.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"name\", \"errors\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, matchNamePath, setValue, setValues } from './utils/valueUtil';\nimport cloneDeep from './utils/cloneDeep';\nexport var FormStore = /*#__PURE__*/_createClass(function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      _init: true,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        destroyForm: _this.destroyForm,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue,\n        registerWatch: _this.registerWatch\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n\n  this.prevWithoutPreserves = null;\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      var _this$prevWithoutPres;\n\n      var nextStore = setValues({}, initialValues, _this.store); // We will take consider prev form unmount fields.\n      // When the field is not `preserve`, we need fill this with initialValues instead of store.\n      // eslint-disable-next-line array-callback-return\n\n      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 ? void 0 : _this$prevWithoutPres.map(function (_ref) {\n        var namePath = _ref.key;\n        nextStore = setValue(nextStore, namePath, getValue(initialValues, namePath));\n      });\n      _this.prevWithoutPreserves = null;\n\n      _this.updateStore(nextStore);\n    }\n  };\n\n  this.destroyForm = function () {\n    var prevWithoutPreserves = new NameMap();\n\n    _this.getFieldEntities(true).forEach(function (entity) {\n      if (!entity.isPreserve()) {\n        prevWithoutPreserves.set(entity.getNamePath(), true);\n      }\n    });\n\n    _this.prevWithoutPreserves = prevWithoutPreserves;\n  };\n\n  this.getInitialValue = function (namePath) {\n    var initValue = getValue(_this.initialValues, namePath); // Not cloneDeep when without `namePath`\n\n    return namePath.length ? cloneDeep(initValue) : initValue;\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  };\n\n  this.watchList = [];\n\n  this.registerWatch = function (callback) {\n    _this.watchList.push(callback);\n\n    return function () {\n      _this.watchList = _this.watchList.filter(function (fn) {\n        return fn !== callback;\n      });\n    };\n  };\n\n  this.notifyWatch = function () {\n    var namePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // No need to cost perf when nothing need to watch\n    if (_this.watchList.length) {\n      var values = _this.getFieldsValue();\n\n      _this.watchList.forEach(function (callback) {\n        callback(values, namePath);\n      });\n    }\n  };\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  };\n\n  this.updateStore = function (nextStore) {\n    _this.store = nextStore;\n  };\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var _entity$isListField;\n\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath(); // Ignore when it's a list item and not specific the namePath,\n      // since parent field is already take in count\n\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.getFieldWarning = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.warnings;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    var isFieldTouched = function isFieldTouched(field) {\n      return field.isFieldTouched();\n    }; // ===== Will get fully compare when not config namePathList =====\n\n\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    } // Generate a nest tree for validate\n\n\n    var map = new NameMap();\n    namePathList.forEach(function (shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function (field) {\n      var fieldNamePath = field.getNamePath(); // Find matched entity and put into list\n\n      namePathList.forEach(function (shortNamePath) {\n        if (shortNamePath.every(function (nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function (list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    }); // Check if NameMap value is touched\n\n    var isNamePathListTouched = function isNamePathListTouched(entities) {\n      return entities.some(isFieldTouched);\n    };\n\n    var namePathListEntities = map.map(function (_ref2) {\n      var value = _ref2.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Create cache\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.updateStore(setValue(_this.store, namePath, _toConsumableArray(records)[0].value));\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.updateStore(setValues({}, _this.initialValues));\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      _this.notifyWatch();\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.updateStore(setValue(_this.store, namePath, initialValue));\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    var namePathList = [];\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, _excluded);\n\n      var namePath = getNamePath(name);\n      namePathList.push(namePath); // Value\n\n      if ('value' in data) {\n        _this.updateStore(setValue(_this.store, namePath, data.value));\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n\n    _this.notifyWatch(namePathList);\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread(_objectSpread({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n\n  this.initEntityValue = function (entity) {\n    var initialValue = entity.props.initialValue;\n\n    if (initialValue !== undefined) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue(_this.store, namePath);\n\n      if (prevValue === undefined) {\n        _this.updateStore(setValue(_this.store, namePath, initialValue));\n      }\n    }\n  };\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity);\n\n    var namePath = entity.getNamePath();\n\n    _this.notifyWatch([namePath]); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if not preserve\n\n      var mergedPreserve = preserve !== undefined ? preserve : _this.preserve;\n\n      if (mergedPreserve === false && (!isListField || subNamePath.length > 1)) {\n        var defaultValue = isListField ? undefined : _this.getInitialValue(namePath);\n\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function (field) {\n          return (// Only reset when no namePath exist\n            !matchNamePath(field.getNamePath(), namePath)\n          );\n        })) {\n          var _prevStore = _this.store;\n\n          _this.updateStore(setValue(_prevStore, namePath, defaultValue, true)); // Notify that field is unmount\n\n\n          _this.notifyObservers(_prevStore, [namePath], {\n            type: 'remove'\n          }); // Dependencies update\n\n\n          _this.triggerDependenciesUpdate(_prevStore, namePath);\n        }\n      }\n\n      _this.notifyWatch([namePath]);\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread(_objectSpread({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref3) {\n        var onStoreChange = _ref3.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.triggerDependenciesUpdate = function (prevStore, namePath) {\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    });\n\n    return childrenFields;\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n\n    _this.updateStore(setValue(_this.store, namePath, value));\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    });\n\n    _this.notifyWatch([namePath]); // Dependencies update\n\n\n    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      var nextStore = setValues(_this.store, store);\n\n      _this.updateStore(nextStore);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n\n    _this.notifyWatch();\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref4) {\n          var name = _ref4.name,\n              errors = _ref4.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref5) {\n        var fieldName = _ref5.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      /**\n       * Recursive validate if configured.\n       * TODO: perf improvement @zombieJ\n       */\n\n\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n\n        if ( // nameList[i] === undefined 说明是以 nameList 开头的\n        // ['name'] -> ['name','list']\n        namePath.every(function (nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === undefined;\n        })) {\n          namePathList.push(namePath);\n        }\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread(_objectSpread({}, defaultValidateMessages), _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function (ruleErrors) {\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          ruleErrors.forEach(function (_ref6) {\n            var warningOnly = _ref6.rule.warningOnly,\n                errors = _ref6.errors;\n\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref7) {\n        var name = _ref7.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  };\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n});\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}