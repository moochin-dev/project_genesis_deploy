{"ast":null,"code":"var _jsxFileName = \"/Users/obzva/Desktop/find-clean-water/src/components/table-for-invalid.js\";\nimport { Table } from \"antd\";\nimport { getWaterBrands, getWaterBrandVersions, getWaterBrandVersionSourceMappings, getWaterSources } from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TableForInvalid() {\n  const columns = [{\n    title: '브랜드',\n    dataIndex: 'brand',\n    key: 'brand'\n  }, {\n    title: '수질적합',\n    dataIndex: 'validity',\n    key: 'validity'\n  }, {\n    title: '부적합 판정 횟수',\n    dataIndex: 'invalid_count',\n    key: 'invalid_count'\n  }, {\n    title: '출시일',\n    dataIndex: 'open_date',\n    key: 'open_date'\n  }];\n  const waterBrandsDataSource = getWaterBrands().map(x => {\n    return {\n      key: x.id,\n      brand: x.name,\n      validity: x.recent_test_result,\n      invalid_count: x.total_invalid_count,\n      open_date: x.open_date\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Table, {\n    dataSource: waterBrandsDataSource,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = TableForInvalid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableForInvalid\");","map":{"version":3,"names":["Table","getWaterBrands","getWaterBrandVersions","getWaterBrandVersionSourceMappings","getWaterSources","TableForInvalid","columns","title","dataIndex","key","waterBrandsDataSource","map","x","id","brand","name","validity","recent_test_result","invalid_count","total_invalid_count","open_date"],"sources":["/Users/obzva/Desktop/find-clean-water/src/components/table-for-invalid.js"],"sourcesContent":["import { Table} from \"antd\";\nimport { getWaterBrands, getWaterBrandVersions, getWaterBrandVersionSourceMappings, getWaterSources } from \"../data\";\n\nexport default function TableForInvalid() {\n    const columns = [\n        {\n            title: '브랜드',\n            dataIndex: 'brand',\n            key: 'brand',\n        },\n        {\n            title: '수질적합',\n            dataIndex: 'validity',\n            key: 'validity',\n        },\n        {\n            title: '부적합 판정 횟수',\n            dataIndex: 'invalid_count',\n            key: 'invalid_count',\n        },\n        {\n            title: '출시일',\n            dataIndex: 'open_date',\n            key: 'open_date',\n        },\n    ]\n\n    const waterBrandsDataSource = getWaterBrands().map(x => {\n        return {\n            key: x.id,\n            brand: x.name,\n            validity: x.recent_test_result,\n            invalid_count: x.total_invalid_count,\n            open_date: x.open_date\n        }\n    })\n    \n    return (\n    <Table dataSource={waterBrandsDataSource} columns={columns} />\n    )\n    \n}\n"],"mappings":";AAAA,SAASA,KAAT,QAAqB,MAArB;AACA,SAASC,cAAT,EAAyBC,qBAAzB,EAAgDC,kCAAhD,EAAoFC,eAApF,QAA2G,SAA3G;;AAEA,eAAe,SAASC,eAAT,GAA2B;EACtC,MAAMC,OAAO,GAAG,CACZ;IACIC,KAAK,EAAE,KADX;IAEIC,SAAS,EAAE,OAFf;IAGIC,GAAG,EAAE;EAHT,CADY,EAMZ;IACIF,KAAK,EAAE,MADX;IAEIC,SAAS,EAAE,UAFf;IAGIC,GAAG,EAAE;EAHT,CANY,EAWZ;IACIF,KAAK,EAAE,WADX;IAEIC,SAAS,EAAE,eAFf;IAGIC,GAAG,EAAE;EAHT,CAXY,EAgBZ;IACIF,KAAK,EAAE,KADX;IAEIC,SAAS,EAAE,WAFf;IAGIC,GAAG,EAAE;EAHT,CAhBY,CAAhB;EAuBA,MAAMC,qBAAqB,GAAGT,cAAc,GAAGU,GAAjB,CAAqBC,CAAC,IAAI;IACpD,OAAO;MACHH,GAAG,EAAEG,CAAC,CAACC,EADJ;MAEHC,KAAK,EAAEF,CAAC,CAACG,IAFN;MAGHC,QAAQ,EAAEJ,CAAC,CAACK,kBAHT;MAIHC,aAAa,EAAEN,CAAC,CAACO,mBAJd;MAKHC,SAAS,EAAER,CAAC,CAACQ;IALV,CAAP;EAOH,CAR6B,CAA9B;EAUA,oBACA,QAAC,KAAD;IAAO,UAAU,EAAEV,qBAAnB;IAA0C,OAAO,EAAEJ;EAAnD;IAAA;IAAA;IAAA;EAAA,QADA;AAIH;KAtCuBD,e"},"metadata":{},"sourceType":"module"}