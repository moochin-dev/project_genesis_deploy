{"ast":null,"code":"var _jsxFileName = \"/Users/obzva/Desktop/find-clean-water/src/components/table-for-invalid.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"antd\";\nimport { getWaterBrands } from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TableForInvalid() {\n  const waterBrands = getWaterBrands();\n  const columns = [{\n    title: \"브랜드\",\n    dataIndex: \"brand\",\n    key: \"brand\",\n    render: (text, record, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/${waterBrands[index].id}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 40\n    }, this)\n  }, {\n    title: \"수질적합\",\n    dataIndex: \"validity\",\n    key: \"validity\",\n    render: boolean => boolean ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"O\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 52\n    }, this)\n  }, {\n    title: \"부적합 판정 횟수\",\n    dataIndex: \"invalid_count\",\n    key: \"invalid_count\"\n  }, {\n    title: \"출시일\",\n    dataIndex: \"open_date\",\n    key: \"open_date\"\n  }];\n  const waterBrandsDataSource = waterBrands.sort((a, b) => {\n    if (a.total_invalid_count < b.total_invalid_count) return;\n  }).map(x => {\n    return {\n      key: x.id,\n      brand: x.name,\n      validity: x.recent_test_result,\n      invalid_count: x.total_invalid_count,\n      open_date: x.open_date\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC218\\uC9C8 \\uBD80\\uC801\\uD569 \\uD310\\uC815 \\uD69F\\uC218\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: waterBrandsDataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = TableForInvalid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableForInvalid\");","map":{"version":3,"names":["React","Link","Table","getWaterBrands","TableForInvalid","waterBrands","columns","title","dataIndex","key","render","text","record","index","id","boolean","waterBrandsDataSource","sort","a","b","total_invalid_count","map","x","brand","name","validity","recent_test_result","invalid_count","open_date"],"sources":["/Users/obzva/Desktop/find-clean-water/src/components/table-for-invalid.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"antd\";\nimport { getWaterBrands } from \"../data\";\n\nexport default function TableForInvalid() {\n  const waterBrands = getWaterBrands();\n\n  const columns = [\n    {\n      title: \"브랜드\",\n      dataIndex: \"brand\",\n      key: \"brand\",\n      render: (text, record, index) => <Link to={`/${waterBrands[index].id}`}>{text}</Link>,\n    },\n    {\n      title: \"수질적합\",\n      dataIndex: \"validity\",\n      key: \"validity\",\n      render: (boolean) => (boolean ? <h3>O</h3> : <h3>X</h3>),\n    },\n    {\n      title: \"부적합 판정 횟수\",\n      dataIndex: \"invalid_count\",\n      key: \"invalid_count\",\n    },\n    {\n      title: \"출시일\",\n      dataIndex: \"open_date\",\n      key: \"open_date\",\n    },\n  ];\n\n  const waterBrandsDataSource = waterBrands.sort((a, b) => {\n    if (a.total_invalid_count < b.total_invalid_count) return \n  }).map((x) => {\n    return {\n      key: x.id,\n      brand: x.name,\n      validity: x.recent_test_result,\n      invalid_count: x.total_invalid_count,\n      open_date: x.open_date,\n    };\n  });\n\n  return (\n    <>\n      <h2>수질 부적합 판정 횟수</h2>\n      <Table dataSource={waterBrandsDataSource} columns={columns} />\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,cAAT,QAA+B,SAA/B;;;AAEA,eAAe,SAASC,eAAT,GAA2B;EACxC,MAAMC,WAAW,GAAGF,cAAc,EAAlC;EAEA,MAAMG,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,KADT;IAEEC,SAAS,EAAE,OAFb;IAGEC,GAAG,EAAE,OAHP;IAIEC,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,kBAAyB,QAAC,IAAD;MAAM,EAAE,EAAG,IAAGR,WAAW,CAACQ,KAAD,CAAX,CAAmBC,EAAG,EAApC;MAAA,UAAwCH;IAAxC;MAAA;MAAA;MAAA;IAAA;EAJnC,CADc,EAOd;IACEJ,KAAK,EAAE,MADT;IAEEC,SAAS,EAAE,UAFb;IAGEC,GAAG,EAAE,UAHP;IAIEC,MAAM,EAAGK,OAAD,IAAcA,OAAO,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,gBAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAJ/C,CAPc,EAad;IACER,KAAK,EAAE,WADT;IAEEC,SAAS,EAAE,eAFb;IAGEC,GAAG,EAAE;EAHP,CAbc,EAkBd;IACEF,KAAK,EAAE,KADT;IAEEC,SAAS,EAAE,WAFb;IAGEC,GAAG,EAAE;EAHP,CAlBc,CAAhB;EAyBA,MAAMO,qBAAqB,GAAGX,WAAW,CAACY,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;IACvD,IAAID,CAAC,CAACE,mBAAF,GAAwBD,CAAC,CAACC,mBAA9B,EAAmD;EACpD,CAF6B,EAE3BC,GAF2B,CAEtBC,CAAD,IAAO;IACZ,OAAO;MACLb,GAAG,EAAEa,CAAC,CAACR,EADF;MAELS,KAAK,EAAED,CAAC,CAACE,IAFJ;MAGLC,QAAQ,EAAEH,CAAC,CAACI,kBAHP;MAILC,aAAa,EAAEL,CAAC,CAACF,mBAJZ;MAKLQ,SAAS,EAAEN,CAAC,CAACM;IALR,CAAP;EAOD,CAV6B,CAA9B;EAYA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAO,UAAU,EAAEZ,qBAAnB;MAA0C,OAAO,EAAEV;IAAnD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;KA9CuBF,e"},"metadata":{},"sourceType":"module"}