{"ast":null,"code":"var _jsxFileName = \"/Users/obzva/Desktop/find-clean-water/src/components/table/table.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useBrandSourceMappings, useTestHistory, useWaterBrands, useWaterSources } from \"../../custom-hooks\";\nimport \"./table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const columns = [\"브랜드\", \"제조원\", \"수질적합여부\", \"부적합판정횟수\", \"출시일\"]; //api 호출\n\n  const waterBrands = useWaterBrands();\n  const waterSources = useWaterSources();\n  const brandSourceMappings = useBrandSourceMappings();\n  const testHistory = useTestHistory(); //데이터 편집\n\n  for (let i = 0; i < waterSources.length; i++) {\n    waterSources[i].testHistory = [];\n  }\n\n  for (let i = 0; i < testHistory.length; i++) {\n    const sourceIndex = testHistory[i].source - 2;\n    waterSources[sourceIndex].testHistory.push(testHistory[i]);\n  }\n\n  console.log(waterSources);\n\n  for (let i = 0; i < waterBrands.length; i++) {\n    waterBrands[i].sources = [];\n  }\n\n  console.log(waterBrands.sources);\n\n  for (let i = 0; i < brandSourceMappings.length; i++) {\n    const brandIndex = brandSourceMappings[i].brand - 1;\n    const sourceIndex = brandSourceMappings[i].source - 2;\n    waterBrands[brandIndex].sources.push(waterSources[sourceIndex]);\n  }\n\n  console.log(waterBrands);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableArea\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"tableHead\",\n        children: /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: column\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"tableBody\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: waterBrands.map((waterBrand, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: waterBrand.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"YtwsflBccBCWcz15Ao7b8AnNy7Y=\", false, function () {\n  return [useWaterBrands, useWaterSources, useBrandSourceMappings, useTestHistory];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useBrandSourceMappings","useTestHistory","useWaterBrands","useWaterSources","Table","columns","waterBrands","waterSources","brandSourceMappings","testHistory","i","length","sourceIndex","source","push","console","log","sources","brandIndex","brand","map","column","index","waterBrand","name"],"sources":["/Users/obzva/Desktop/find-clean-water/src/components/table/table.js"],"sourcesContent":["import React from \"react\";\nimport {\n  useBrandSourceMappings,\n  useTestHistory,\n  useWaterBrands,\n  useWaterSources,\n} from \"../../custom-hooks\";\nimport \"./table.css\";\n\nconst Table = () => {\n  const columns = [\n    \"브랜드\",\n    \"제조원\",\n    \"수질적합여부\",\n    \"부적합판정횟수\",\n    \"출시일\",\n  ];\n\n  //api 호출\n  const waterBrands = useWaterBrands();\n  const waterSources = useWaterSources();\n  const brandSourceMappings = useBrandSourceMappings();\n  const testHistory = useTestHistory();\n\n  //데이터 편집\n  for (let i = 0; i < waterSources.length; i++) {\n    waterSources[i].testHistory = [];\n  }\n\n  for (let i = 0; i < testHistory.length; i++) {\n    const sourceIndex = testHistory[i].source - 2;\n    waterSources[sourceIndex].testHistory.push(testHistory[i]);\n  }\n\n  console.log(waterSources);\n\n  for (let i = 0; i < waterBrands.length; i++) {\n    waterBrands[i].sources = [];\n  }\n\n  console.log(waterBrands.sources)\n\n  for (let i = 0; i < brandSourceMappings.length; i++) {\n    const brandIndex = brandSourceMappings[i].brand - 1;\n    const sourceIndex = brandSourceMappings[i].source - 2;\n    waterBrands[brandIndex].sources.push(waterSources[sourceIndex]);\n  }\n\n  console.log(waterBrands);\n\n  return (\n    <div className=\"tableArea\">\n      <div className=\"tableWrapper\">\n        <table className=\"tableHead\">\n          <thead>\n            <tr>\n              {columns.map((column, index) => (\n                <th key={index}>{column}</th>\n              ))}\n            </tr>\n          </thead>\n        </table>\n        <table className=\"tableBody\">\n          <tbody>\n            {waterBrands.map((waterBrand, index) => (\n              <tr key={index}>\n                <td>{waterBrand.name}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}